using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ConfigFrame.CommunicationService.SerialPortSupport
{
    public class SerialPortMock
    {
        public static byte[] sendAndReceive(byte[] sendData)
        {
            byte[] temp = null;
            Console.WriteLine("send: " + BitConverter.ToString(sendData));
            if (sendData[1] == 0x40)
            {
                temp = new byte[] { 0x01, 0x40, 0x37, 0x48, 0x79, 0x64, 0x72, 0x6F, 0x6C, 0x61, 0x62, 0x00, 0x97, 
                    0x07, 0x00, 0x00, 0xE8, 0x7D, 0x47, 0x00, 0x36, 0x36, 0x32, 0x35, 0x36, 0x00, 0x00, 0x00, 0x00,
                    0x48, 0x59, 0x44, 0x52, 0x4F, 0x4C, 0x41, 0x42, 0x20, 0x44, 0x53, 0x35, 0x58, 0x00, 0x00, 0x00,
                    0x00, 0x35, 0x2E, 0x34, 0x34, 0x00, 0x00, 0x31, 0x2E, 0x31, 0x36, 0x00, 0x00, 0x00, 0x3B 											
                    };
            }
            else if (sendData[1] == 0x41)
            {
                temp = new byte[] { 0x01, 0x41, 0x01, 0x33, 0x10, 0x49 };
            }
            else if (sendData[1] == 0x42)
            {
                temp = new byte[] { 0x01, 0x42, 0x01, 0x30, 0xA0, 0x48 };
            }
            else if (sendData[1] == 0x43)
            {
                temp = new byte[] { 0x01, 0x43, 0x1B, 0x00, 0x79, 0x64, 0x72, 0x6F, 0x6C, 0x61, 0x62, 0x00, 0x00, 0x00,
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x48, 0x79, 0x64, 0x72, 0x6F, 0x6C, 0x61, 0x62, 
                        0x00, 0x4C, 0xC8 };
            }
            else if (sendData[1] == 0x46)
            {
                if (sendData[3] == 0x00)
                {
                    temp = new byte[] { 0x01, 0x46, 0x02, 0x00, 0x01, 0x6C, 0x8D };
                }
                else if (sendData[3] == 0x01)
                {
                    temp = new byte[] { 0x01, 0x46, 0xFB, 0x01, 0x43, 0x69, 0x72, 0x63, 0x75, 0x6C, 0x61, 
                            0x74, 0x6F, 0x72, 0x00, 0x00, 0xE8, 0x7D, 0x47, 0xD2, 0x36, 0x48, 0x79, 0x64, 0x72, 
                            0x6F, 0x6C, 0x61, 0x62, 0x00, 0x59, 0x44, 0x52, 0x4F, 0x4C, 0x41, 0x42, 0x43, 0x69, 
                            0x72, 0x63, 0x6C, 0x74, 0x72, 0x00, 0x00, 0x4F, 0x66, 0x66, 0x2F, 0x4F, 0x6E, 0x00, 
                            0x2E, 0x31, 0x25, 0x68, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 
                            0x31, 0x2E, 0x31, 0x68, 0x75, 0x00, 0x00, 0x7C, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x30, 0x3A, 0x20, 0x4F, 0x66, 0x66, 0x0A, 0x31, 0x3A, 0x20, 0x4F, 0x6E, 0x0A, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x92 };
                }
            }
            else if (sendData[1] == 0x48)
            {
                if (sendData[3] == 0x00)
                {
                    temp = new byte[] { 0x01, 0x48, 0x02, 0x00, 0x01, 0x2F, 0xA8 };
                }
                else if (sendData[3] == 0x01)
                {
                    temp = new byte[] { 0x01, 0x48, 0x69, 0x01, 0x10, 0x00, 0x44, 0x61, 0x74, 0x65, 0x2D, 0x54, 
                            0x69, 0x6D, 0x65, 0x00, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x00, 0x72, 0x6F, 
                            0x6C, 0x61, 0x62, 0x00, 0x59, 0x44, 0x52, 0x4F, 0x4C, 0x41, 0x42, 0x54, 0x69, 0x44, 
                            0x2F, 0x54, 0x00, 0x74, 0x00, 0x65, 0x53, 0x65, 0x73, 0x65, 0x63, 0x6F, 0x6E, 0x64, 
                            0x73, 0x00, 0x68, 0x25, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0x7F, 0x13, 0x19, 
                            0xBC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 
                            0x00, 0x00, 0x25, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB0, 0x37, 0x1B };
                }
            }
            else if (sendData[1] == 0x49)
            {
                if (sendData[3] == 0x10)
                {
                    temp = new byte[] { 0x01, 0x49, 0x04, 0x10, 0x00, 0x00, 0x01, 0x31, 0x59 };
                }
                else if (sendData[3] == 0x06)
                {
                    if (sendData[5] == 0x00)
                    {
                        temp = new byte[] { 0x01, 0x49, 0x04, 0x06, 0x00, 0x00, 0x03, 0xB4, 0xD0 };
                    }
                    else if (sendData[5] == 0x01)
                    {
                        temp = new byte[] { 0x01, 0x49, 0xFB, 0x06, 0x00, 0x01, 0x43, 0x6F, 0x6E, 0x64, 0x00, 
                                0x02, 0x00, 0x74, 0x79, 0x00, 0x00, 0x74, 0x74, 0x65, 0x72, 0x79, 0x00, 0x00, 0x72, 
                                0x6F, 0x6C, 0x61, 0x62, 0x00, 0x59, 0x44, 0x52, 0x4F, 0x4C, 0x41, 0x42, 0x54, 0x69, 
                                0x43, 0x6F, 0x6E, 0x64, 0x00, 0x42, 0x50, 0x00, 0x00, 0x43, 0x6F, 0x6D, 0x70, 0x00, 
                                0x48, 0x67, 0x00, 0x00, 0x25, 0x31, 0x2E, 0x31, 0x68, 0x75, 0x00, 0x43, 0x2D, 0x01, 
                                0x00, 0x7F, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x25, 0x31, 0x2E, 0x31, 0x68, 0x75, 0x00, 0x01, 0x2D, 0x05, 0x00, 0x66, 0x00, 
                                0x00, 0x00, 0x00, 0x25, 0x37, 0x2E, 0x30, 0x66, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x45, 0x6E, 0x43, 0x6F, 0x6E, 0x64, 0x20, 0x54, 0x65, 0x6D, 0x70, 0x20, 0x43, 0x6F, 
                                0x6D, 0x70, 0x20, 0x28, 0x31, 0x3A, 0x46, 0x72, 0x65, 0x73, 0x68, 0x20, 0x32, 0x3A, 
                                0x53, 0x61, 0x6C, 0x74, 0x20, 0x33, 0x3A, 0x53, 0x74, 0x64, 0x4D, 0x74, 0x68, 0x20, 
                                0x34, 0x3A, 0x4E, 0x6F, 0x6E, 0x65, 0x20, 0x35, 0x3A, 0x43, 0x75, 0x73, 0x74, 0x6F, 
                                0x6D, 0x29, 0x3A, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0xFD };
                    }
                    else if (sendData[5] == 0x02)
                    {
                        temp = new byte[] { 0x01, 0x49, 0xFB, 0x06, 0x00, 0x02, 0x43, 0x6F, 0x6E, 0x64, 0x00, 
                                0x02, 0x00, 0x74, 0x79, 0x00, 0x00, 0x74, 0x74, 0x65, 0x72, 0x79, 0x00, 0x00, 0x72, 
                                0x6F, 0x6C, 0x61, 0x62, 0x00, 0x59, 0x44, 0x52, 0x4F, 0x4C, 0x41, 0x42, 0x54, 0x69, 
                                0x43, 0x6F, 0x6E, 0x64, 0x00, 0x42, 0x50, 0x00, 0x00, 0x52, 0x61, 0x6E, 0x67, 0x65, 
                                0x00, 0x67, 0x00, 0x00, 0x25, 0x31, 0x2E, 0x31, 0x68, 0x75, 0x00, 0x43, 0x2D, 0x01, 
                                0x00, 0x7F, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x25, 0x31, 0x2E, 0x31, 0x68, 0x75, 0x00, 0x01, 0x2D, 0x04, 0x00, 0x66, 0x00, 
                                0x00, 0x00, 0x00, 0x25, 0x37, 0x2E, 0x30, 0x66, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x45, 0x6E, 0x53, 0x65, 0x74, 0x20, 0x52, 0x61, 0x6E, 0x67, 0x65, 0x20, 0x28, 0x31, 
                                0x3A, 0x41, 0x75, 0x74, 0x6F, 0x20, 0x32, 0x3A, 0x48, 0x69, 0x67, 0x68, 0x20, 0x33, 
                                0x3A, 0x4D, 0x69, 0x64, 0x20, 0x34, 0x3A, 0x4C, 0x6F, 0x77, 0x29, 0x3A, 0x00, 0x20, 
                                0x34, 0x3A, 0x4E, 0x6F, 0x6E, 0x65, 0x20, 0x35, 0x3A, 0x43, 0x75, 0x73, 0x74, 0x6F, 
                                0x6D, 0x29, 0x3A, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x01 };
                    }
                    else if (sendData[5] == 0x03)
                    {
                        temp = new byte[] { 0x01, 0x49, 0xFB, 0x06, 0x00, 0x03, 0x43, 0x6F, 0x6E, 0x64, 0x00, 0x02, 
                                0x00, 0x74, 0x79, 0x00, 0x00, 0x74, 0x74, 0x65, 0x72, 0x79, 0x00, 0x00, 0x72, 0x6F, 
                                0x6C, 0x61, 0x62, 0x00, 0x59, 0x44, 0x52, 0x4F, 0x4C, 0x41, 0x42, 0x54, 0x69, 0x43, 
                                0x6F, 0x6E, 0x64, 0x00, 0x42, 0x50, 0x00, 0x00, 0x50, 0x6F, 0x69, 0x6E, 0x74, 0x73, 
                                0x00, 0x00, 0x00, 0x25, 0x31, 0x2E, 0x31, 0x68, 0x75, 0x00, 0x43, 0x2D, 0x01, 0x00, 
                                0x7F, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x25, 0x31, 0x2E, 0x31, 0x68, 0x75, 0x00, 0x01, 0x2D, 0x02, 0x00, 0x66, 0x00, 0x00, 
                                0x00, 0x00, 0x25, 0x37, 0x2E, 0x30, 0x66, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 
                                0x6E, 0x53, 0x65, 0x74, 0x20, 0x43, 0x61, 0x6C, 0x20, 0x50, 0x6F, 0x69, 0x6E, 0x74, 
                                0x73, 0x20, 0x28, 0x31, 0x3A, 0x32, 0x20, 0x50, 0x6F, 0x69, 0x6E, 0x74, 0x20, 0x43, 
                                0x61, 0x6C, 0x20, 0x32, 0x3A, 0x34, 0x20, 0x50, 0x6F, 0x69, 0x6E, 0x74, 0x20, 0x43, 
                                0x61, 0x6C, 0x29, 0x3A, 0x00, 0x20, 0x35, 0x3A, 0x43, 0x75, 0x73, 0x74, 0x6F, 0x6D, 
                                0x29, 0x3A, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x23, 0x28 };
                    }
                }

            }
            else if (sendData[1] == 0x4B)
            {
                if (sendData[3] == 0x10)
                {
                    temp = new byte[] { 0x01, 0x4B, 0x04, 0x10, 0x00, 0x00, 0x00, 0xF1, 0x7B };
                }
                else if (sendData[3] == 0x06)
                {
                    if (sendData[5] == 0x00)
                    {
                        temp = new byte[] { 0x01, 0x4B, 0x04, 0x06, 0x00, 0x00, 0x01, 0x34, 0xF3 };
                    }
                    else if (sendData[5] == 0x01)
                    {
                        temp = new byte[] { 0x01, 0x4B, 0xFB, 0x06, 0x00, 0x01, 0x53, 0x70, 0x43, 0x6F, 0x6E, 
                                0x64, 0x00, 0x74, 0x79, 0x00, 0x00, 0x74, 0x74, 0x65, 0x72, 0x79, 0x00, 0x00, 0x72, 
                                0x6F, 0x6C, 0x61, 0x62, 0x00, 0x59, 0x44, 0x52, 0x4F, 0x4C, 0x41, 0x42, 0x54, 0x69, 
                                0x53, 0x70, 0x43, 0x6F, 0x6E, 0x64, 0x00, 0x00, 0x00, 0x20, 0x6D, 0x53, 0x2F, 0x63, 
                                0x6D, 0x00, 0x00, 0x00, 0x25, 0x36, 0x2E, 0x31, 0x66, 0x00, 0x00, 0x43, 0x2D, 0x6A, 
                                0xBC, 0xB4, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x25, 0x36, 0x2E, 0x31, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 
                                0xC8, 0x42, 0x00, 0x25, 0x37, 0x2E, 0x30, 0x66, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x45, 0x6E, 0x45, 0x6E, 0x74, 0x65, 0x72, 0x20, 0x53, 0x70, 0x43, 0x6F, 0x6E, 0x64, 
                                0x20, 0x73, 0x74, 0x61, 0x6E, 0x64, 0x61, 0x72, 0x64, 0x20, 0x28, 0x6D, 0x53, 0x2F, 
                                0x63, 0x6D, 0x29, 0x3A, 0x20, 0x00, 0x34, 0x20, 0x50, 0x6F, 0x69, 0x6E, 0x74, 0x20, 
                                0x43, 0x61, 0x6C, 0x29, 0x3A, 0x00, 0x20, 0x35, 0x3A, 0x43, 0x75, 0x73, 0x74, 0x6F, 
                                0x6D, 0x29, 0x3A, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xCF };
                    }
                }
            }
            else if (sendData[1] == 0x4E)
            {
                temp = new byte[] { 0x01, 0x4E, 0x20, 0x00, 0x0C, 0x00, 0x05, 0x56, 0x98, 0x07, 0x00, 0x5C, 0x97, 
                        0x07, 0x00, 0x00, 0xE8, 0x7D, 0x47, 0x83, 0xFC, 0x80, 0x42, 0x00, 0xE8, 0x7D, 0x47, 0x00, 
                        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9B, 0x61 };
            }
            else if (sendData[1] == 0x67)
            {
                temp = new byte[] { 0x01, 0x67, 0x09, 0x01, 0x07, 0x0F, 0x0A, 0x12, 0x1A, 0x1C, 0x1D, 0x02, 0xE8, 0x0B };
            }
            else
            {
                temp = null;
            }

            if (temp != null)
            {
                Console.WriteLine("recv: " + BitConverter.ToString(temp));
            }

            return temp;
        }
    }
}
